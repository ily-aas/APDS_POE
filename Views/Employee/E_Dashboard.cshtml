@model List<User>;

@{
    ViewData["Title"] = "Farmer Dashboard";
}

<div class="container mt-4 mb-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Welcome, @User.Identity.Name</h2>
        @using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { @class = "d-inline" }))
        {
            <button type="submit" class="btn btn-outline-danger" title="Logout">
                <i class="fas fa-sign-out-alt me-1"></i>
            </button>
        }
    </div>

    <div class="row align-items-center mt-4 mb-4">
        <div class="col-md-6">
            <button class="btn btn-info me-2" onclick="RenderPartialContainer(1)">
                <i class="fas fa-eye"></i> View Products
            </button>
            <button class="btn btn-warning" onclick="RenderPartialContainer(2)">
                <i class="fas fa-eye"></i> View Farmers
            </button>

        </div>

        <div class="col-md-6 text-end">
            @using (Html.BeginForm("Farmer", "Employee", FormMethod.Get))
            {
                <button class="btn btn-success">
                    <i class="fas fa-user-plus me-1"></i> Add Farmer
                </button>
            }
        </div>
    </div>
    <div id="PartialViewContainer" class="row"></div>
</div>

<script>

    const RenderPartialContainer = (type) => {

        let param = parseInt(type);

        $.ajax({
            url: '@Url.Action("RenderPartial", "Employee")',
            method: 'GET',
            data:{
                Type : param,
            },
            contentType: 'application/json',
            success: function (data) {
                $('#PartialViewContainer').children().remove();
                 $('#PartialViewContainer').append(data);
            },
            error: function (xhr) {
                $('#PartialViewContainer').children().remove();
                alert("An error occurred while trying to get the partial view");
            }
        });

    }

    const ViewFarmerProducts = (elem) =>{

        let id = $(elem).data('id');

        $.ajax({
            url: '@Url.Action("ViewFarmerProducts", "Employee")', 
            method: 'GET',
            data:{
                ID : id,
            },
            contentType: 'application/json',
            success: function (data) {
                //Clean View
                $('.user-container').remove();

                //Display Products
                $('#FarmerName').text(data.user.fullName);


                data.products.forEach(product => {
                    const row = `
                        <tr>
                            <td>${product.id}</td>
                            <td>${product.name}</td>
                            <td>${product.category}</td>
                            <td>${product.dateCreated ? new Date(product.dateCreated).toLocaleDateString() : ''}</td>
                            <td>${product.productionDate ? new Date(product.productionDate).toLocaleDateString() : ''}</td>
                        </tr>
                    `;
                    $('#UserProductsBody').append(row);
                });

                // Show container
                $('.product-list-container').removeClass('d-none');
            },
            error: function (xhr) {
                console.error("Error:", xhr.responseText);
            }
        });

    }

    const applyFilter = () => {

        const category = $('#categoryFilter').val();
        const date = $('#dateInput').val();
        const dateFilterType = $('#dateFilter').val();

        $.ajax({
            url: '@Url.Action("GetFilteredProducts", "Employee")',
            method: 'GET',
            data: {
                Category: category,
                Date: date,
                DateFilter: dateFilterType
            },
            success: function (data) {

                $('#filteredTableBody').children().remove();

                data.products.forEach(product => {
                    const row = `
                        <tr>
                            <td>${product.id}</td>
                            <td>${product.name}</td>
                            <td>${product.category}</td>
                            <td>${product.dateCreated ? new Date(product.dateCreated).toLocaleDateString() : ''}</td>
                            <td>${product.productionDate ? new Date(product.productionDate).toLocaleDateString() : ''}</td>
                        </tr>
                    `;
                    $('#filteredTableBody').append(row);
                });

            },
            error: function (xhr, status, error) {
                console.error("Error:", xhr.responseText || error);
                alert("An error occurred while applying filters. Please try again.");
            }
        });
    };

</script>


